{"version":3,"sources":["fonts/help.svg","fonts/close.svg","screenshots/android/1.png","screenshots/android/2.png","screenshots/android/3.png","screenshots/android/4.png","screenshots/android/5.png","screenshots/android/7.png","screenshots/android/8.png","screenshots/android/9.png","screenshots/ios/1.PNG","screenshots/ios/2.PNG","screenshots/ios/3.PNG","screenshots/ios/4.PNG","screenshots/android/6.png","components/appstore/AppItem.js","components/appstore/AppItems.js","components/appstore/AppStore.js","components/help/Help.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","AppItem","props","appItem","react_default","a","createElement","className","os","env","href","url","rel","name","version","AppItems","listItems","appItems","map","key","appstore_AppItem","AppStore","apps","appJSON","app","appName","src","appIcon","appstore_AppItems","Help","Link","to","close","alt","anchor_link_default","offset","id","imageAndroid1","imageAndroid2","imageAndroid3","imageAndroid4","imageAndroid5","imageAndroid7","imageAndroid8","imageAndroid9","imageiOS1","imageiOS2","imageiOS3","imageiOS4","App","BrowserRouter","basename","process","help","Switch","Route","exact","path","component","render","Component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.9ea9145c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/help.a1c4cf31.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.42ee1478.svg\";","module.exports = __webpack_public_path__ + \"static/media/1.52ff6d91.png\";","module.exports = __webpack_public_path__ + \"static/media/2.be23db1b.png\";","module.exports = __webpack_public_path__ + \"static/media/3.af307a54.png\";","module.exports = __webpack_public_path__ + \"static/media/4.d9a8cd59.png\";","module.exports = __webpack_public_path__ + \"static/media/5.82630844.png\";","module.exports = __webpack_public_path__ + \"static/media/7.03a4c661.png\";","module.exports = __webpack_public_path__ + \"static/media/8.5696c806.png\";","module.exports = __webpack_public_path__ + \"static/media/9.0131068f.png\";","module.exports = __webpack_public_path__ + \"static/media/1.4af5bcd6.PNG\";","module.exports = __webpack_public_path__ + \"static/media/2.584df839.PNG\";","module.exports = __webpack_public_path__ + \"static/media/3.ede4c65e.PNG\";","module.exports = __webpack_public_path__ + \"static/media/4.402e14ea.PNG\";","module.exports = __webpack_public_path__ + \"static/media/6.d96ca1a4.png\";","import React from 'react';\nimport './AppItem.css';\n\nfunction AppItem(props) {\n    const appItem = props.appItem;\n    return (\n        <div className=\"AppItem\">\n            <span>{appItem.os} {appItem.env &&\n                 <span> [{appItem.env}]</span>\n                 }: </span>\n            <a href={appItem.url} rel=\"noopener noreferrer\">\n                {appItem.name} ({appItem.version})\n          </a>\n        </div>\n    );\n}\n\nexport default AppItem;","import React from 'react';\nimport './AppItems.css';\n\nimport AppItem from './AppItem';\n\n\nfunction AppItems(props) {\n\n    const appItems = props.appItems;\n    const listItems = appItems.map((appItem) =>\n        <li key={appItem.url}><AppItem appItem={appItem} /></li>\n    );\n\n    return (\n        <ul className=\"AppItems\">{listItems}</ul>\n    );\n}\n\nexport default AppItems;","import React from 'react';\nimport './AppStore.css';\n\nimport AppItems from './AppItems';\n\nimport appJSON from '../../apps/apps.json';\n\nfunction AppStore(props) {\n\n    const apps = appJSON.map((app) =>\n        <li key={app.appName} className=\"AppStore\"><img src={app.appIcon} /><p className=\"AppName\">{app.appName}</p>\n            {app.apps && <AppItems appItems={app.apps} />}\n        </li>\n    );\n\n    return (\n        <ul className=\"AppList\">{apps}</ul>\n    );\n\n}\n\nexport default AppStore;","import React from 'react';\nimport { Link } from \"react-router-dom\";\nimport AnchorLink from 'react-anchor-link-smooth-scroll'\n\n\nimport './Help.css';\nimport close from '../../fonts/close.svg';\nimport imageAndroid1 from '../../screenshots/android/1.png';\nimport imageAndroid2 from '../../screenshots/android/2.png';\nimport imageAndroid3 from '../../screenshots/android/3.png';\nimport imageAndroid4 from '../../screenshots/android/4.png';\nimport imageAndroid5 from '../../screenshots/android/5.png';\nimport imageAndroid6 from '../../screenshots/android/6.png';\nimport imageAndroid7 from '../../screenshots/android/7.png';\nimport imageAndroid8 from '../../screenshots/android/8.png';\nimport imageAndroid9 from '../../screenshots/android/9.png';\n\nimport imageiOS1 from '../../screenshots/ios/1.PNG';\nimport imageiOS2 from '../../screenshots/ios/2.PNG';\nimport imageiOS3 from '../../screenshots/ios/3.PNG';\nimport imageiOS4 from '../../screenshots/ios/4.PNG';\n\nfunction Help(props) {\n\n    return (\n        <div>\n            <Link to=\"/\"><img src={close} className=\"Close-button\" alt=\"Close\" /></Link>\n            <p>\n                <AnchorLink offset='80' href='#android'>Android</AnchorLink>\n            </p>\n            <p>\n                <AnchorLink offset='80' href='#ios'>iOS</AnchorLink>\n            </p>\n\n            <div className=\"Help-content\">\n                <h2 id=\"android\">Android</h2>\n                <p>1. Open the ≪https://bjb-mobile-banking.github.io/appstore≫ URL in Chrome on the mobile phone / tablet</p>\n                <p>2. Tap on the link of the app version you want to install</p>\n                <img src={imageAndroid1} />\n                <p>3. Tap on 'Download' in the pop-up</p>\n                <img src={imageAndroid2} />\n                <p>4. Tap on 'Open'</p>\n                <img src={imageAndroid3} />\n                <p>5.a If you have a security warning, that apps can't be installed from unknown sources, click on 'Settings' on the pop-up</p>\n                <img src={imageAndroid4} />\n                <p>5.b Allow apps to be installed form 'Unknown sources'</p>\n                <img src={imageAndroid5} />\n                <p>6. Tap on 'Install'</p>\n                <img src={imageAndroid7} />\n                <p>7. Wait until install finishes..</p>\n                <img src={imageAndroid8} />\n                <p>8. Tap on 'Open'</p>\n                <img src={imageAndroid9} />\n                <h2 id=\"ios\">iOS</h2>\n                <p>1. Open the ≪https://bjb-mobile-banking.github.io/appstore≫ URL in Chrome on the mobile phone / tablet</p>\n                <p>2. Tap on the link of the app version you want to install</p>\n                <img src={imageiOS1} />\n                <p>3. Tap on 'Install' in the pop-up</p>\n                <img src={imageiOS2} />\n                <p>4. Wait until loading finishes..</p>\n                <img src={imageiOS3} />\n                <p>5. Tap on app icon to open app</p>\n                <img src={imageiOS4} />\n            </div>\n        </div>\n    );\n\n}\n\nexport default Help;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route, Switch, Link } from \"react-router-dom\";\n\nimport help from './fonts/help.svg';\nimport './App.css';\nimport AppStore from './components/appstore/AppStore';\nimport Help from './components/help/Help';\n\nclass App extends Component {\n  render() {\n    return (\n      <Router basename={process.env.PUBLIC_URL}>\n        <div className=\"App\">\n          <div className=\"App-header\">\n            <div className=\"App-header-text\">\n              <h1>Julius Bär</h1>\n              <p>Internal App Store</p>\n            </div>\n            <div className=\"App-header-help\">\n              <Link to=\"/help\"><img src={help} className=\"Help-Logo\" alt=\"Help\" /></Link>\n            </div>\n          </div>\n          <div className=\"App-content\">\n            <Switch>\n              <Route exact path='/' component={AppStore} />\n              <Route exact path='/help' component={Help} />\n              <Route render={() =>\n                <div>\n                  <h1>Oops...</h1>\n                  <h2>Something went wrong :(</h2>\n                </div>\n              } />\n            </Switch>\n          </div>\n          <footer>version: 0.0.2 (alpha)</footer>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}